name: 🚀 Deploy InnArt

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: 📂 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 📦 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 🔧 Install Dependencies
      run: |
        npm ci
        npm install -g typescript

    - name: 🔍 Type Check
      run: npm run type-check
      continue-on-error: true

    - name: 🏗️ Build Project
      run: npm run build
      env:
        VITE_ALCHEMY_API_KEY: ${{ secrets.VITE_ALCHEMY_API_KEY }}
        VITE_CONTRACT_ADDRESS: ${{ secrets.VITE_CONTRACT_ADDRESS }}
        VITE_NFT_STORAGE_API_KEY: ${{ secrets.VITE_NFT_STORAGE_API_KEY }}
        VITE_WALLETCONNECT_PROJECT_ID: ${{ secrets.VITE_WALLETCONNECT_PROJECT_ID }}

    - name: 📊 Build Report
      run: |
        echo "📦 Build Size Report:"
        du -sh dist/
        echo "📁 Build Contents:"
        ls -la dist/

    - name: 🌐 Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' && matrix.node-version == '20'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        cname: ${{ secrets.CUSTOM_DOMAIN }}  # Optional: your custom domain

    - name: 🚀 Deploy to Vercel
      if: github.ref == 'refs/heads/main' && matrix.node-version == '20'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./

    - name: 📱 Deploy to Netlify
      if: github.ref == 'refs/heads/main' && matrix.node-version == '20'
      uses: nwtgck/actions-netlify@v2.1
      with:
        publish-dir: './dist'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: false
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

    - name: 📈 Performance Audit
      if: matrix.node-version == '20'
      run: |
        npm install -g lighthouse
        # lighthouse --output=json --output-path=./lighthouse-report.json http://localhost:3000 || true

    - name: ✅ Deployment Success
      if: success() && github.ref == 'refs/heads/main' && matrix.node-version == '20'
      run: |
        echo "🎉 InnArt successfully deployed!"
        echo "🔗 Check your deployment at:"
        echo "- GitHub Pages: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
        echo "- Or your custom domain if configured"

    - name: ❌ Deployment Failed
      if: failure()
      run: |
        echo "💥 Deployment failed!"
        echo "Check the logs above for errors."
        echo "Common issues:"
        echo "1. Missing environment secrets"
        echo "2. Build errors"
        echo "3. Invalid configuration"

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    
    steps:
    - name: 📂 Checkout Repository
      uses: actions/checkout@v4

    - name: 🔒 Run Security Audit
      run: |
        npm audit --audit-level high
        echo "🔍 Security scan completed"

    - name: 📝 Dependency Check
      run: |
        npm outdated || true
        echo "📦 Dependency check completed"

  notify:
    runs-on: ubuntu-latest
    needs: [build-and-deploy, security-scan]
    if: always()
    
    steps:
    - name: 📧 Notify Success
      if: needs.build-and-deploy.result == 'success'
      run: |
        echo "✅ InnArt deployment completed successfully!"
        echo "🎨 Your NFT marketplace is live!"

    - name: 📧 Notify Failure  
      if: needs.build-and-deploy.result == 'failure'
      run: |
        echo "❌ InnArt deployment failed!"
        echo "🔧 Please check the logs and fix any issues."
