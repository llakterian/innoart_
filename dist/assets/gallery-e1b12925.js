import"./wallet-connection-ab619167.js";import"./user-store-1040f6a5.js";import"./blockchain-service-9e4ce7eb.js";import"./image-handler-91d970e9.js";window.currencyConverter=new class{constructor(){this.rates={},this.lastUpdate=null,this.UPDATE_INTERVAL=3e5,this.init()}async init(){await this.fetchRates(),this.startAutoUpdate()}async fetchRates(){try{const n=await fetch("https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=kes,usd,eur,gbp,jpy,cad,aud,chf,cny,inr"),e=await n.json();e.ethereum&&(this.rates=e.ethereum,this.lastUpdate=new Date,this.updateUI())}catch(n){console.error("Failed to fetch exchange rates:",n),this.rates={kes:45e4,usd:3400,eur:3100,gbp:2600,jpy:52e4,cad:4700,aud:5200,chf:3050,cny:24e3,inr:29e4}}}startAutoUpdate(){setInterval(()=>{this.fetchRates()},this.UPDATE_INTERVAL)}convertETH(n,e="kes"){const t=this.rates[e.toLowerCase()];return t?(parseFloat(n)*t).toFixed(2):(console.warn(`Currency ${e} not supported`),null)}formatCurrency(n,e="kes"){return`${{kes:"KES",usd:"$",eur:"â‚¬",gbp:"Â£",jpy:"Â¥",cad:"C$",aud:"A$",chf:"CHF",cny:"Â¥",inr:"â‚¹"}[e.toLowerCase()]||e.toUpperCase()} ${parseFloat(n).toLocaleString()}`}updateUI(){document.querySelectorAll(".price-converter").forEach(n=>{const e=n.dataset.ethAmount,t=n.dataset.currency||"kes";if(e&&this.rates[t.toLowerCase()]){const a=this.convertETH(e,t),r=this.formatCurrency(a,t);n.innerHTML=`\n                    <span class="eth-price">${e} ETH</span>\n                    <span class="fiat-price">(${r})</span>\n                `}});document.querySelectorAll(".rates-update-time").forEach(n=>{n.textContent=`Last updated: ${this.lastUpdate.toLocaleTimeString()}`})}getSupportedCurrencies(){return Object.keys(this.rates)}getRate(n){return this.rates[n.toLowerCase()]}};const n=document.createElement("style");n.textContent="\n    .price-converter {\n        display: flex;\n        flex-direction: column;\n        gap: 0.25rem;\n    }\n    \n    .eth-price {\n        font-weight: 600;\n        color: var(--primary-color);\n        font-size: 1.2rem;\n    }\n    \n    .fiat-price {\n        font-size: 0.9rem;\n        color: var(--text-dark);\n    }\n    \n    .rates-update-time {\n        font-size: 0.8rem;\n        color: var(--text-dark);\n        text-align: center;\n        margin-top: 0.5rem;\n    }\n",document.head.appendChild(n);class e{constructor(){this.nfts=[],this.filteredNFTs=[],this.currentFilter="all",this.init()}async init(){console.log("Initializing Gallery App..."),this.setupEventListeners(),await this.loadNFTs(),console.log("Gallery App initialized")}setupEventListeners(){const n=document.getElementById("mobileMenuToggle"),e=document.getElementById("mobileMenu");n&&e&&(n.addEventListener("click",()=>{e.classList.toggle("active")}),document.addEventListener("click",t=>{n.contains(t.target)||e.contains(t.target)||e.classList.remove("active")})),document.querySelectorAll(".filter-btn").forEach(n=>{n.addEventListener("click",n=>{this.setFilter(n.target.getAttribute("data-filter"))})});const t=document.getElementById("searchInput");t&&t.addEventListener("input",n=>{this.searchNFTs(n.target.value)}),window.addEventListener("walletConnected",()=>{console.log("Wallet connected in gallery")}),window.addEventListener("walletDisconnected",()=>{console.log("Wallet disconnected in gallery")})}async loadNFTs(){const n=document.getElementById("nftGallery");if(n)try{n.innerHTML='\n                <div class="loading">\n                    <div class="loading-spinner"></div>\n                    <p>Loading amazing NFTs...</p>\n                </div>\n            ',this.nfts=await this.generateSampleNFTs(),this.filteredNFTs=[...this.nfts],this.renderNFTs()}catch(e){console.error("Error loading NFTs:",e),n.innerHTML='\n                <div class="empty-state">\n                    <h3>Failed to load NFTs</h3>\n                    <p>Please try again later</p>\n                </div>\n            '}}async generateSampleNFTs(){const n=window.userStore.getNFTs().filter(n=>n.forSale&&!n.sold);if(0===n.length){const n=["art","digital","abstract","photography"],e=[];for(let t=1;t<=8;t++){const a=n[Math.floor(Math.random()*n.length)],r=[["#FF6B6B","#4ECDC4"],["#45B7D1","#96CEB4"],["#FFEAA7","#DDA0DD"],["#74B9FF","#A29BFE"],["#FD79A8","#6C5CE7"],["#00B894","#00CEC9"],["#E17055","#FDCB6E"],["#6C5CE7","#A29BFE"]],s=r[t%r.length];e.push({id:`sample_${t}`,name:`Sample NFT #${t}`,creator:`0x${Math.random().toString(16).substr(2,8)}...${Math.random().toString(16).substr(2,4)}`,price:(5*Math.random()+.1).toFixed(2),image:this.generateNFTImage(t,`NFT #${t}`,s[0],s[1]),category:a,forSale:!0,sold:!1})}return e}return n.map(n=>({...n,title:n.name,artist:this.formatAddress(n.creator),image:this.getNFTImage(n)}))}generateNFTImage(n,e,t,a){const r=document.createElement("canvas");r.width=400,r.height=400;const s=r.getContext("2d"),i=s.createLinearGradient(0,0,400,400);return i.addColorStop(0,t),i.addColorStop(1,a),s.fillStyle=i,s.fillRect(0,0,400,400),s.globalAlpha=.3,s.fillStyle="white",s.beginPath(),s.arc(100,100,60,0,2*Math.PI),s.fill(),s.beginPath(),s.arc(300,300,80,0,2*Math.PI),s.fill(),s.globalAlpha=1,s.fillStyle="white",s.font="32px Arial",s.textAlign="center",s.fillText("ðŸŽ¨",200,180),s.font="16px Arial",s.fillText(e,200,220),s.font="12px Arial",s.fillText(`ID: ${n}`,200,240),r.toDataURL()}setFilter(n){this.currentFilter=n,document.querySelectorAll(".filter-btn").forEach(n=>{n.classList.remove("active")}),document.querySelector(`[data-filter="${n}"]`).classList.add("active"),this.filteredNFTs="all"===n?[...this.nfts]:this.nfts.filter(e=>e.category===n),this.renderNFTs()}searchNFTs(n){const e=n.toLowerCase();this.filteredNFTs=this.nfts.filter(n=>n.title.toLowerCase().includes(e)||n.artist.toLowerCase().includes(e)),this.renderNFTs()}renderNFTs(){const n=document.getElementById("nftGallery");n&&(0!==this.filteredNFTs.length?(n.innerHTML=this.filteredNFTs.map(n=>`\n            <div class="nft-card">\n                <img src="${this.getNFTImage(n)}" alt="${n.title||n.name}" class="nft-image" loading="lazy">\n                <div class="nft-info">\n                    <h3 class="nft-title">${n.title||n.name}</h3>\n                    <p class="nft-artist">by ${n.artist||this.formatAddress(n.creator)}</p>\n                    <div class="nft-price">\n                        <div>\n                            <div class="price-converter" data-eth-amount="${n.price}" data-currency="kes">\n                                ${n.price} ETH\n                            </div>\n                            <div class="price-label">Price</div>\n                        </div>\n                    </div>\n                    <div class="nft-actions">\n                        <button class="btn btn-primary btn-small" onclick="gallery.viewNFT('${n.id}')">View Details</button>\n                        <button class="btn btn-secondary btn-small" onclick="gallery.buyNFT('${n.id}')">Buy Now</button>\n                    </div>\n                </div>\n            </div>\n        `).join(""),window.currencyConverter&&window.currencyConverter.updateUI()):n.innerHTML='\n                <div class="empty-state">\n                    <h3>No NFTs Found</h3>\n                    <p>Try adjusting your search or filter criteria</p>\n                </div>\n            ')}viewNFT(n){let e=this.nfts.find(e=>e.id===n);e||(e=window.userStore.getNFT(n)),e?this.showNFTDetails(e):window.walletConnection.showMessage("NFT not found.","error")}showNFTDetails(n){const e=window.userStore.getArtist(n.creator),t=e?e.name:this.formatAddress(n.creator),a=document.createElement("div");a.className="nft-details-modal-overlay",a.innerHTML=`\n            <div class="nft-details-modal">\n                <div class="modal-header">\n                    <h2>NFT Details</h2>\n                    <button class="close-btn" onclick="this.parentElement.parentElement.parentElement.remove()">&times;</button>\n                </div>\n                <div class="modal-content">\n                    <div class="nft-details-layout">\n                        <div class="nft-image-section">\n                            <img src="${this.getNFTImage(n)}" alt="${n.name}" class="nft-detail-image">\n                            <div class="nft-status">\n                                <span class="status-badge ${n.forSale?"for-sale":"not-for-sale"}">\n                                    ${n.sold?"SOLD":n.forSale?"FOR SALE":"NOT FOR SALE"}\n                                </span>\n                            </div>\n                        </div>\n                        <div class="nft-info-section">\n                            <div class="nft-title-section">\n                                <h3>${n.name}</h3>\n                                <p class="nft-description">${n.description||"No description provided"}</p>\n                            </div>\n                            \n                            <div class="nft-details-grid">\n                                <div class="detail-item">\n                                    <span class="detail-label">Creator:</span>\n                                    <span class="detail-value">${t}</span>\n                                </div>\n                                <div class="detail-item">\n                                    <span class="detail-label">Contract Address:</span>\n                                    <span class="detail-value">${this.formatAddress(n.creator)}</span>\n                                </div>\n                                <div class="detail-item">\n                                    <span class="detail-label">Token ID:</span>\n                                    <span class="detail-value">${n.id}</span>\n                                </div>\n                                <div class="detail-item">\n                                    <span class="detail-label">Price:</span>\n                                    <span class="detail-value">\n                                        <span class="price-converter" data-eth-amount="${n.price}" data-currency="kes">\n                                            ${n.price} ETH\n                                        </span>\n                                    </span>\n                                </div>\n                                <div class="detail-item">\n                                    <span class="detail-label">Category:</span>\n                                    <span class="detail-value">${n.category||"Art"}</span>\n                                </div>\n                                <div class="detail-item">\n                                    <span class="detail-label">Created:</span>\n                                    <span class="detail-value">${n.createdAt?new Date(n.createdAt).toLocaleDateString():"Unknown"}</span>\n                                </div>\n                                ${n.sold?`\n                                    <div class="detail-item">\n                                        <span class="detail-label">Sold On:</span>\n                                        <span class="detail-value">${new Date(n.soldAt).toLocaleDateString()}</span>\n                                    </div>\n                                    <div class="detail-item">\n                                        <span class="detail-label">Owner:</span>\n                                        <span class="detail-value">${this.formatAddress(n.owner)}</span>\n                                    </div>\n                                `:""}\n                            </div>\n                            \n                            <div class="price-breakdown">\n                                <h4>Price Breakdown</h4>\n                                <div class="breakdown-item">\n                                    <span>NFT Price:</span>\n                                    <span class="price-converter" data-eth-amount="${n.price}" data-currency="kes">${n.price} ETH</span>\n                                </div>\n                                <div class="breakdown-item">\n                                    <span>Artist receives (80%):</span>\n                                    <span class="price-converter" data-eth-amount="${(.8*parseFloat(n.price)).toFixed(4)}" data-currency="kes">${(.8*parseFloat(n.price)).toFixed(4)} ETH</span>\n                                </div>\n                                <div class="breakdown-item">\n                                    <span>Platform fee (20%):</span>\n                                    <span class="price-converter" data-eth-amount="${(.2*parseFloat(n.price)).toFixed(4)}" data-currency="kes">${(.2*parseFloat(n.price)).toFixed(4)} ETH</span>\n                                </div>\n                            </div>\n                            \n                            <div class="nft-actions">\n                                ${n.forSale&&!n.sold?`\n                                    <button class="btn btn-primary" onclick="gallery.buyNFT('${n.id}'); this.parentElement.parentElement.parentElement.parentElement.remove();">\n                                        Buy Now - ${n.price} ETH\n                                    </button>\n                                `:""}\n                                ${n.sold?'\n                                    <button class="btn btn-secondary" disabled>\n                                        Sold\n                                    </button>\n                                ':""}\n                                <button class="btn btn-secondary" onclick="this.parentElement.parentElement.parentElement.parentElement.remove();">\n                                    Close\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `,document.body.appendChild(a),window.currencyConverter&&window.currencyConverter.updateUI(),this.addNFTDetailsModalStyles()}buyNFT(n){if(!window.walletConnection.getConnectionStatus())return void window.walletConnection.showMessage("Please connect your wallet first to buy NFTs.","error");const e=window.walletConnection.getWalletAddress();let t=this.nfts.find(e=>e.id===n);if(t||(t=window.userStore.getNFT(n)),!t)return window.walletConnection.showMessage("NFT not found. Please refresh the page.","error"),console.error("NFT not found with ID:",n),void console.log("Available NFTs:",this.nfts.map(n=>n.id));t.creator!==e?t.sold?window.walletConnection.showMessage("This NFT has already been sold.","error"):t.forSale?this.showPurchaseConfirmation(t,e):window.walletConnection.showMessage("This NFT is not currently for sale.","error"):window.walletConnection.showMessage("You cannot buy your own NFT.","error")}showPurchaseConfirmation(n,e){const t=document.createElement("div");t.className="purchase-modal-overlay",t.innerHTML=`\n            <div class="purchase-modal">\n                <div class="purchase-modal-header">\n                    <h3>ðŸ›’ Purchase NFT</h3>\n                    <button class="close-btn" onclick="this.parentElement.parentElement.parentElement.remove()">&times;</button>\n                </div>\n                <div class="purchase-modal-content">\n                    <div class="nft-preview">\n                        <img src="${this.getNFTImage(n)}" alt="${n.title||n.name}" style="width: 100px; height: 100px; object-fit: cover; border-radius: 8px;">\n                        <div class="nft-details">\n                            <h4>${n.title||n.name}</h4>\n                            <p>by ${this.formatAddress(n.creator)}</p>\n                        </div>\n                    </div>\n                    <div class="purchase-breakdown">\n                        <div class="breakdown-item">\n                            <span>NFT Price:</span>\n                            <span class="price-converter" data-eth-amount="${n.price}" data-currency="kes">${n.price} ETH</span>\n                        </div>\n                        <div class="breakdown-item">\n                            <span>Artist receives (80%):</span>\n                            <span class="price-converter" data-eth-amount="${(.8*parseFloat(n.price)).toFixed(4)}" data-currency="kes">${(.8*parseFloat(n.price)).toFixed(4)} ETH</span>\n                        </div>\n                        <div class="breakdown-item">\n                            <span>Platform fee (20%):</span>\n                            <span class="price-converter" data-eth-amount="${(.2*parseFloat(n.price)).toFixed(4)}" data-currency="kes">${(.2*parseFloat(n.price)).toFixed(4)} ETH</span>\n                        </div>\n                        <hr>\n                        <div class="breakdown-item total">\n                            <span>Total:</span>\n                            <span class="price-converter" data-eth-amount="${n.price}" data-currency="kes">${n.price} ETH</span>\n                        </div>\n                    </div>\n                    <div class="purchase-actions">\n                        <button class="btn btn-secondary" onclick="this.parentElement.parentElement.parentElement.remove()">Cancel</button>\n                        <button class="btn btn-primary" onclick="gallery.confirmPurchase('${n.id}', '${e}')">Confirm Purchase</button>\n                    </div>\n                </div>\n            </div>\n        `,document.body.appendChild(t),window.currencyConverter&&window.currencyConverter.updateUI()}async confirmPurchase(n,e){const t=document.querySelector(".purchase-modal-overlay");t&&t.remove(),window.walletConnection.showMessage("Processing purchase...","info");try{const t=window.userStore.getNFT(n);if(!t)throw new Error("NFT not found");const a=window.blockchainService;if(!a)throw new Error("Blockchain service not available");if("0xaa36a7"!==a.getCurrentNetwork().chainId){if(!(await a.switchToSepolia()))throw new Error("Please switch to Sepolia testnet")}const r=await a.getBalance(e);if(parseFloat(r)<parseFloat(t.price))throw new Error(`Insufficient balance. Required: ${t.price} ETH, Available: ${parseFloat(r).toFixed(4)} ETH`);const s=await a.purchaseNFT(e,t.price,t.creator);if(!s.success)throw new Error(s.error||"Blockchain transaction failed");{const t=window.userStore.purchaseNFT(n,e);t.success?(window.walletConnection.showMessage(`NFT purchased successfully! Artist: ${s.artistTransaction}, Platform: ${s.developerTransaction}`,"success"),sessionStorage.setItem(`purchase_${n}_artist_tx`,s.artistTransaction),sessionStorage.setItem(`purchase_${n}_platform_tx`,s.developerTransaction),this.loadNFTs()):window.walletConnection.showMessage(t.message,"error")}}catch(a){console.error("Purchase error:",a),window.walletConnection.showMessage(`Purchase failed: ${a.message}`,"error")}}formatAddress(n){return n?`${n.substring(0,6)}...${n.substring(n.length-4)}`:""}getNFTImage(n){if(n.image){const e=window.imageHandler.getImage(n.image);if(e)return e.data}return this.generateNFTImage(n.id,n.name,"#6366f1","#ec4899")}addNFTDetailsModalStyles(){if(document.getElementById("nft-details-modal-styles"))return;const n=document.createElement("style");n.id="nft-details-modal-styles",n.textContent="\n            .nft-details-modal-overlay {\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                background: rgba(0, 0, 0, 0.8);\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                z-index: 1000;\n                padding: 2rem;\n            }\n            \n            .nft-details-modal {\n                background: var(--card-background);\n                border-radius: 16px;\n                max-width: 900px;\n                width: 100%;\n                max-height: 90vh;\n                overflow-y: auto;\n                border: 1px solid var(--border-color);\n                box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);\n            }\n            \n            .modal-header {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                padding: 2rem 2rem 1rem;\n                border-bottom: 1px solid var(--border-color);\n            }\n            \n            .modal-header h2 {\n                margin: 0;\n                color: var(--text-light);\n                font-size: 1.5rem;\n            }\n            \n            .close-btn {\n                background: none;\n                border: none;\n                font-size: 2rem;\n                cursor: pointer;\n                color: var(--text-dark);\n                padding: 0;\n                width: 40px;\n                height: 40px;\n                border-radius: 50%;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                transition: all 0.3s ease;\n            }\n            \n            .close-btn:hover {\n                background: var(--border-color);\n                color: var(--text-light);\n            }\n            \n            .modal-content {\n                padding: 2rem;\n            }\n            \n            .nft-details-layout {\n                display: grid;\n                grid-template-columns: 1fr 1fr;\n                gap: 2rem;\n            }\n            \n            .nft-image-section {\n                position: relative;\n            }\n            \n            .nft-detail-image {\n                width: 100%;\n                height: 400px;\n                object-fit: cover;\n                border-radius: 12px;\n                border: 1px solid var(--border-color);\n            }\n            \n            .nft-status {\n                position: absolute;\n                top: 1rem;\n                right: 1rem;\n            }\n            \n            .status-badge {\n                padding: 0.5rem 1rem;\n                border-radius: 20px;\n                font-size: 0.8rem;\n                font-weight: 600;\n                text-transform: uppercase;\n                letter-spacing: 0.5px;\n            }\n            \n            .status-badge.for-sale {\n                background: var(--success-color);\n                color: white;\n            }\n            \n            .status-badge.not-for-sale {\n                background: var(--error-color);\n                color: white;\n            }\n            \n            .nft-info-section {\n                display: flex;\n                flex-direction: column;\n                gap: 1.5rem;\n            }\n            \n            .nft-title-section h3 {\n                font-size: 1.5rem;\n                margin: 0 0 0.5rem 0;\n                color: var(--text-light);\n            }\n            \n            .nft-description {\n                color: var(--text-dark);\n                line-height: 1.6;\n                margin: 0;\n            }\n            \n            .nft-details-grid {\n                display: grid;\n                gap: 1rem;\n            }\n            \n            .detail-item {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                padding: 0.75rem 0;\n                border-bottom: 1px solid var(--border-color);\n            }\n            \n            .detail-label {\n                font-weight: 600;\n                color: var(--text-dark);\n            }\n            \n            .detail-value {\n                color: var(--text-light);\n                font-family: 'Courier New', monospace;\n                font-size: 0.9rem;\n            }\n            \n            .price-breakdown {\n                background: var(--background-light);\n                padding: 1rem;\n                border-radius: 8px;\n                border: 1px solid var(--border-color);\n            }\n            \n            .price-breakdown h4 {\n                margin: 0 0 1rem 0;\n                color: var(--text-light);\n                font-size: 1rem;\n            }\n            \n            .breakdown-item {\n                display: flex;\n                justify-content: space-between;\n                margin-bottom: 0.5rem;\n            }\n            \n            .breakdown-item span:first-child {\n                color: var(--text-dark);\n            }\n            \n            .breakdown-item span:last-child {\n                color: var(--text-light);\n                font-weight: 600;\n            }\n            \n            .nft-actions {\n                display: flex;\n                gap: 1rem;\n                margin-top: 1rem;\n            }\n            \n            .nft-actions .btn {\n                flex: 1;\n                padding: 0.75rem 1rem;\n                border-radius: 8px;\n                border: none;\n                font-weight: 600;\n                cursor: pointer;\n                transition: all 0.3s ease;\n            }\n            \n            .nft-actions .btn-primary {\n                background: var(--primary-color);\n                color: white;\n            }\n            \n            .nft-actions .btn-primary:hover {\n                background: var(--primary-hover);\n                transform: translateY(-2px);\n            }\n            \n            .nft-actions .btn-secondary {\n                background: var(--border-color);\n                color: var(--text-light);\n            }\n            \n            .nft-actions .btn-secondary:hover {\n                background: var(--text-dark);\n                color: white;\n            }\n            \n            .nft-actions .btn:disabled {\n                opacity: 0.5;\n                cursor: not-allowed;\n            }\n            \n            .nft-actions .btn:disabled:hover {\n                transform: none;\n            }\n            \n            @media (max-width: 768px) {\n                .nft-details-modal-overlay {\n                    padding: 1rem;\n                }\n                \n                .nft-details-layout {\n                    grid-template-columns: 1fr;\n                }\n                \n                .nft-detail-image {\n                    height: 300px;\n                }\n                \n                .modal-header, .modal-content {\n                    padding: 1rem;\n                }\n                \n                .nft-actions {\n                    flex-direction: column;\n                }\n            }\n        ",document.head.appendChild(n)}}document.addEventListener("DOMContentLoaded",()=>{window.gallery=new e});
