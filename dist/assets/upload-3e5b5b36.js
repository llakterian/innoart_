import"./multi-wallet-connector-0c891252.js";import"./user-store-1b0d5afd.js";import"./image-handler-91d970e9.js";class e{constructor(){this.selectedFile=null,this.selectedCategory=null,this.init()}async init(){this.setupEventListeners(),await this.checkWalletConnection()}setupEventListeners(){document.addEventListener("click",e=>{"connectWallet"===e.target.id&&this.handleWalletConnection()});const e=document.getElementById("mobileMenuToggle"),t=document.getElementById("mobileMenu");e&&t&&(e.addEventListener("click",()=>{t.classList.toggle("active")}),document.addEventListener("click",o=>{e.contains(o.target)||t.contains(o.target)||t.classList.remove("active")})),this.setupImageUpload(),this.setupCategorySelection(),this.setupFormSubmission()}setupImageUpload(){const e=document.getElementById("nftImage"),t=document.getElementById("imagePreview");document.getElementById("previewImage"),t.querySelector(".upload-placeholder"),e&&e.addEventListener("change",e=>{this.handleFileSelect(e.target.files[0])}),t&&t.addEventListener("click",()=>{null==e||e.click()}),t&&(["dragenter","dragover","dragleave","drop"].forEach(e=>{t.addEventListener(e,this.preventDefaults,!1),document.body.addEventListener(e,this.preventDefaults,!1)}),["dragenter","dragover"].forEach(e=>{t.addEventListener(e,()=>{t.classList.add("drag-over")},!1)}),["dragleave","drop"].forEach(e=>{t.addEventListener(e,()=>{t.classList.remove("drag-over")},!1)}),t.addEventListener("drop",e=>{const t=e.dataTransfer.files;t.length>0&&this.handleFileSelect(t[0])},!1))}preventDefaults(e){e.preventDefault(),e.stopPropagation()}setupCategorySelection(){const e=document.querySelectorAll(".category-option");e.forEach(t=>{t.addEventListener("click",o=>{o.preventDefault(),e.forEach(e=>e.classList.remove("selected")),t.classList.add("selected"),this.selectedCategory=t.dataset.category})})}setupFormSubmission(){const e=document.getElementById("nftUploadForm");e&&e.addEventListener("submit",e=>{e.preventDefault(),this.handleMintNFT()})}async checkWalletConnection(){console.log("Upload: checkWalletConnection called"),window.multiWalletConnector?(this.updateWalletButton(),window.addEventListener("walletConnected",e=>{console.log("Wallet connected in upload:",e.detail.address),this.updateWalletButton()}),window.addEventListener("walletDisconnected",()=>{console.log("Wallet disconnected in upload"),this.updateWalletButton()})):setTimeout(()=>{this.checkWalletConnection()},100)}async handleWalletConnection(){if(console.log("Upload: handleWalletConnection called"),window.multiWalletConnector)try{window.multiWalletConnector.getConnectionStatus()?(await window.multiWalletConnector.disconnect(),this.updateWalletButton()):(await window.multiWalletConnector.showConnectionModal(),this.updateWalletButton())}catch(e){console.error("Upload: Wallet connection failed",e),this.showMessage("Failed to connect wallet: "+e.message,"error")}else console.error("Upload: Multi-wallet connector not available"),this.showMessage("Wallet connection system not available","error")}updateWalletButton(){const e=document.getElementById("connectWallet");if(e)if(window.multiWalletConnector&&window.multiWalletConnector.getConnectionStatus()){const t=window.multiWalletConnector.getWalletAddress();e.textContent=`${t.slice(0,6)}...${t.slice(-4)}`,e.classList.add("connected")}else e.textContent="Connect Wallet",e.classList.remove("connected")}showConnectWalletPrompt(){const e=document.getElementById("uploadForm"),t=document.getElementById("connectWalletPrompt");e&&(e.style.display="none"),t&&(t.style.display="block")}hideConnectWalletPrompt(){const e=document.getElementById("uploadForm"),t=document.getElementById("connectWalletPrompt");e&&(e.style.display="block"),t&&(t.style.display="none")}handleFileSelect(e){if(!e)return;if(!["image/jpeg","image/jpg","image/png","image/gif","image/webp"].includes(e.type.toLowerCase()))return void this.showMessage("Please select a valid image file (JPEG, PNG, GIF, WebP)","error");if(e.size>10485760)return void this.showMessage("File size must be less than 10MB","error");this.selectedFile=e;const t=document.getElementById("previewImage"),o=document.querySelector(".upload-placeholder"),n=document.getElementById("imagePreview");if(e.type.startsWith("image/")){const l=new FileReader;l.onload=e=>{t&&o&&n&&(t.src=e.target.result,t.style.display="block",o.style.display="none",n.classList.add("has-image"))},l.readAsDataURL(e)}}async handleMintNFT(){var e,t,o,n,l,s;let a=0;for(;!window.multiWalletConnector&&a<10;)await new Promise(e=>setTimeout(e,100)),a++;if(!window.multiWalletConnector)return void this.showMessage("Wallet connection system not available. Please refresh the page.","error");if(!window.multiWalletConnector.getConnectionStatus()){this.showMessage("Please connect your wallet first.","error");try{if(await window.multiWalletConnector.showConnectionModal(),!window.multiWalletConnector.getConnectionStatus())return}catch(w){return void console.error("Failed to show wallet connection modal:",w)}}const i=null==(t=null==(e=document.getElementById("nftTitle"))?void 0:e.value)?void 0:t.trim(),r=null==(n=null==(o=document.getElementById("nftDescription"))?void 0:o.value)?void 0:n.trim(),d=null==(l=document.getElementById("nftPrice"))?void 0:l.value,c=(null==(s=document.getElementById("royaltyPercentage"))?void 0:s.value)||5;if(!i||!d||!this.selectedFile)return void this.showMessage("Please fill in all required fields and select an image.","error");if(!this.selectedCategory)return void this.showMessage("Please select a category for your NFT.","error");if(parseFloat(d)<=0)return void this.showMessage("Price must be greater than 0 ETH.","error");const u=window.multiWalletConnector.getWalletAddress();if(!window.userStore.isArtistRegistered(u))return this.showMessage("You must be a registered artist to mint NFTs.","error"),void setTimeout(()=>{window.location.href="artist-register.html"},2e3);const m=document.querySelector('button[type="submit"]'),g=m.querySelector(".btn-text"),p=m.querySelector(".btn-loading"),y=document.getElementById("uploadProgress"),h=document.getElementById("progressFill");m&&(m.disabled=!0,g.style.display="none",p.style.display="inline-block"),y&&(y.style.display="block");try{this.updateProgress(h,20);const e=await window.imageHandler.processImage(this.selectedFile);this.updateProgress(h,60);const t={name:i,description:r||"No description provided",price:parseFloat(d),creator:u,image:e.imageId,category:this.selectedCategory,royalty:parseInt(c),createdAt:Date.now(),status:"for-sale"};this.updateProgress(h,80);window.userStore.createNFT(t);this.updateProgress(h,100),setTimeout(()=>{this.showMessage(`NFT "${i}" created successfully!`,"success"),this.resetForm(),m&&(m.disabled=!1,g.style.display="inline",p.style.display="none"),y&&(y.style.display="none"),setTimeout(()=>{window.location.href="profile.html"},2e3)},1e3)}catch(w){console.error("Minting error:",w),this.showMessage("Failed to create NFT: "+w.message,"error"),m&&(m.disabled=!1,g.style.display="inline",p.style.display="none"),y&&(y.style.display="none")}}updateProgress(e,t){e&&(e.style.width=t+"%")}showMessage(e,t="info"){let o=document.getElementById("uploadMessage");if(!o){o=document.createElement("div"),o.id="uploadMessage",o.className="upload-message";const e=document.getElementById("nftUploadForm");e&&e.insertBefore(o,e.firstChild)}o.className=`upload-message ${t}`,o.textContent=e,o.style.display="block",setTimeout(()=>{o&&(o.style.display="none")},5e3)}resetForm(){const e=document.getElementById("nftUploadForm");e&&e.reset();const t=document.getElementById("previewImage"),o=document.querySelector(".upload-placeholder"),n=document.getElementById("imagePreview");t&&(t.style.display="none",t.src=""),o&&(o.style.display="block"),n&&n.classList.remove("has-image");document.querySelectorAll(".category-option").forEach(e=>e.classList.remove("selected")),this.selectedFile=null,this.selectedCategory=null;const l=document.getElementById("uploadMessage");l&&(l.style.display="none")}}document.addEventListener("DOMContentLoaded",()=>{new e});
